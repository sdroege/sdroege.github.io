initSidebarItems({"constant":[["VIDEO_CHROMA_SITE_ALT_LINE",""],["VIDEO_CHROMA_SITE_COSITED",""],["VIDEO_CHROMA_SITE_DV",""],["VIDEO_CHROMA_SITE_H_COSITED",""],["VIDEO_CHROMA_SITE_JPEG",""],["VIDEO_CHROMA_SITE_MPEG2",""],["VIDEO_CHROMA_SITE_NONE",""],["VIDEO_CHROMA_SITE_UNKNOWN",""],["VIDEO_CHROMA_SITE_V_COSITED",""],["VIDEO_FLAG_NONE",""],["VIDEO_FLAG_PREMULTIPLIED_ALPHA",""],["VIDEO_FLAG_VARIABLE_FPS",""],["VIDEO_FORMAT_FLAG_ALPHA",""],["VIDEO_FORMAT_FLAG_COMPLEX",""],["VIDEO_FORMAT_FLAG_GRAY",""],["VIDEO_FORMAT_FLAG_LE",""],["VIDEO_FORMAT_FLAG_PALETTE",""],["VIDEO_FORMAT_FLAG_RGB",""],["VIDEO_FORMAT_FLAG_TILED",""],["VIDEO_FORMAT_FLAG_UNPACK",""],["VIDEO_FORMAT_FLAG_YUV",""],["VIDEO_FRAME_FLAG_FIRST_IN_BUNDLE",""],["VIDEO_FRAME_FLAG_INTERLACED",""],["VIDEO_FRAME_FLAG_MULTIPLE_VIEW",""],["VIDEO_FRAME_FLAG_NONE",""],["VIDEO_FRAME_FLAG_ONEFIELD",""],["VIDEO_FRAME_FLAG_RFF",""],["VIDEO_FRAME_FLAG_TFF",""],["VIDEO_MULTIVIEW_FLAGS_HALF_ASPECT",""],["VIDEO_MULTIVIEW_FLAGS_LEFT_FLIPPED",""],["VIDEO_MULTIVIEW_FLAGS_LEFT_FLOPPED",""],["VIDEO_MULTIVIEW_FLAGS_MIXED_MONO",""],["VIDEO_MULTIVIEW_FLAGS_NONE",""],["VIDEO_MULTIVIEW_FLAGS_RIGHT_FLIPPED",""],["VIDEO_MULTIVIEW_FLAGS_RIGHT_FLOPPED",""],["VIDEO_MULTIVIEW_FLAGS_RIGHT_VIEW_FIRST",""]],"enum":[["Type","A GLib or GLib-based library type"],["VideoColorMatrix","The color matrix is used to convert between Y'PbPr and non-linear RGB (R'G'B')"],["VideoColorPrimaries","The color primaries define the how to transform linear RGB values to and from the CIE XYZ colorspace."],["VideoColorRange","Possible color range values. These constants are defined for 8 bit color values and can be scaled for other bit depths."],["VideoEndianness",""],["VideoFieldOrder","Field order of interlaced content. This is only valid for interlace-mode=interleaved and not interlace-mode=mixed. In the case of mixed or GST_VIDEO_FIELD_ORDER_UNKOWN, the field order is signalled via buffer flags."],["VideoFormat","Enum value describing the most common video formats."],["VideoInterlaceMode","The possible values of the `VideoInterlaceMode` describing the interlace mode of the stream."],["VideoMultiviewMode","All possible stereoscopic 3D and multiview representations. In conjunction with `VideoMultiviewFlags`, describes how multiview content is being transported in the stream."],["VideoTileMode","Enum value describing the available tiling modes."],["VideoTransferFunction","The video transfer function defines the formula for converting between non-linear RGB (R'G'B') and linear RGB"]],"mod":[["prelude",""]],"struct":[["Continue","Continue calling the closure in the future iterations or drop it."],["Error","A generic error capable of representing various error domains (types)."],["TypedValue","A statically typed `Value`."],["Value","A generic value capable of carrying various types."],["VideoChromaSite",""],["VideoColorimetry","Structure describing the color info."],["VideoFlags",""],["VideoFormatFlags",""],["VideoFormatInfo","Information for a video format."],["VideoFrame","A video frame obtained from `VideoFrame::map`"],["VideoFrameFlags",""],["VideoInfo","Information describing image properties. This information can be filled in from GstCaps with `VideoInfo::from_caps`. The information is also used to store the specific video info when mapping a video frame with `VideoFrame::map`."],["VideoInfoBuilder",""],["VideoMultiviewFlags",""],["VideoOverlay","The `VideoOverlay` interface is used for 2 main purposes :"]],"trait":[["Cast","Upcasting and downcasting support."],["IsA","Declares the \"is a\" relationship."],["StaticType","Types that are supported by GLib dynamic typing."],["ToValue","Converts to `Value`."],["VideoOverlayExt","Trait containing all `VideoOverlay` methods."],["VideoOverlayExtManual",""]]});