(function() {var implementors = {};
implementors["futures"] = ["impl&lt;S:&nbsp;<a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/iterator/trait.Iterator.html\" title=\"trait core::iter::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"futures/stream/struct.Wait.html\" title=\"struct futures::stream::Wait\">Wait</a>&lt;S&gt;",];
implementors["gstreamer"] = ["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/iterator/trait.Iterator.html\" title=\"trait core::iter::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"gstreamer/structure/struct.FieldIterator.html\" title=\"struct gstreamer::structure::FieldIterator\">FieldIterator</a>&lt;'a&gt;","impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/iterator/trait.Iterator.html\" title=\"trait core::iter::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"gstreamer/structure/struct.Iter.html\" title=\"struct gstreamer::structure::Iter\">Iter</a>&lt;'a&gt;","impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/iterator/trait.Iterator.html\" title=\"trait core::iter::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"gstreamer/caps/struct.Iter.html\" title=\"struct gstreamer::caps::Iter\">Iter</a>&lt;'a&gt;","impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/iterator/trait.Iterator.html\" title=\"trait core::iter::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"gstreamer/caps/struct.IterMut.html\" title=\"struct gstreamer::caps::IterMut\">IterMut</a>&lt;'a&gt;","impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"gstreamer/tags/trait.Tag.html\" title=\"trait gstreamer::tags::Tag\">Tag</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/iterator/trait.Iterator.html\" title=\"trait core::iter::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"gstreamer/tags/struct.TagIterator.html\" title=\"struct gstreamer::tags::TagIterator\">TagIterator</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"gstreamer/tags/trait.Tag.html\" title=\"trait gstreamer::tags::Tag\">Tag</a>&lt;'a&gt;&gt;::<a class=\"type\" href=\"gstreamer/tags/trait.Tag.html#associatedtype.TagType\" title=\"type gstreamer::tags::Tag::TagType\">TagType</a>: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'a,&nbsp;</span>","impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/iterator/trait.Iterator.html\" title=\"trait core::iter::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"gstreamer/bufferlist/struct.Iter.html\" title=\"struct gstreamer::bufferlist::Iter\">Iter</a>&lt;'a&gt;","impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/iterator/trait.Iterator.html\" title=\"trait core::iter::iterator::Iterator\">StdIterator</a> for <a class=\"struct\" href=\"gstreamer/struct.Iterator.html\" title=\"struct gstreamer::Iterator\">Iterator</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"glib/value/trait.FromValueOptional.html\" title=\"trait glib::value::FromValueOptional\">FromValueOptional</a>&lt;'a&gt; + 'static,&nbsp;</span>",];
implementors["num_integer"] = ["impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/iterator/trait.Iterator.html\" title=\"trait core::iter::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"num_integer/struct.IterBinomial.html\" title=\"struct num_integer::IterBinomial\">IterBinomial</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,&nbsp;</span>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
